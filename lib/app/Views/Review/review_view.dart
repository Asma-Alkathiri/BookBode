import 'package:flutter/material.dart';
import '../../Core/services/Database/database.dart';
import '../../Models/review_model.dart';

class ReviewView extends StatefulWidget {
  const ReviewView({Key? key}) : super(key: key);

  @override
  _ReviewViewState createState() => _ReviewViewState();
}

class _ReviewViewState extends State<ReviewView> {
  final TextEditingController _commentController = TextEditingController();
  double? _userRating;
  final String hotelId = "HOTEL_ID_HERE"; // Replace with actual hotel ID
  final String userId = "USER_ID_HERE";   // Replace with actual user ID

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Write a Review')),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            TextFormField(
              controller: _commentController,
              decoration: InputDecoration(
                labelText: 'Your Comment',
              ),
              maxLines: 5,
            ),
            SizedBox(height: 16),
            DropdownButton<double>(
              value: _userRating,
              hint: Text('Select Rating'),
              onChanged: (newValue) {
                setState(() {
                  _userRating = newValue;
                });
              },
              items: <double>[1, 2, 3, 4, 5].map<DropdownMenuItem<double>>(
                (double value) {
                  return DropdownMenuItem<double>(
                    value: value,
                    child: Text(value.toString()),
                  );
                },
              ).toList(),
            ),
            ElevatedButton(
              onPressed: _submitReview,
              child: Text('Submit Review'),
            ),
          ],
        ),
      ),
    );
  }

  void _submitReview() async {
    if (_commentController.text.isEmpty || _userRating == null) {
      // Handle validation
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Please complete the form.')),
      );
      return;
    }

    final review = Review(
      reviewId: 'REVIEW_ID', // This might be generated by your database
      createdAt: DateTime.now(),
      userRating: _userRating,
      comment: _commentController.text,
      hotelId: hotelId,
      userId: userId,
    );

    try {
      await DatabaseService().createReview(review);
      Navigator.pop(context); // Go back after submitting the review
    } catch (error) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Error submitting review.')),
      );
    }
  }
}
